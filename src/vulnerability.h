#ifndef _vulnerability
#define _vulnerability

#include "hyper.h"
#include "gain.h"

/**
 * \brief Prior Bayes vulnerability.
 *
 * The Bayes vulnerability of a prior distribution is the probability of
 * an adversary guessing a secret correctly in one try.
 *
 * \param prior Prior distribution on the set of secrets.
 *
 * \return Bayes vulnerability of a prior distribution.
 */
long double bayesVulnerability(Distribution &prior);

/** 
 * \brief Posterior Bayes vulnerability.
 *
 * The Posterior Bayes vulnerability is the expected probability 
 * of an adversary guessing a secret correctly in one try.
 * It is calculated weighting the Bayes vulnerability of each posterior by its
 * probability of occuring.
 *
 * \param hyper A hyper-distribution.
 *
 * \return Bayes vulnerability of a hyper-distribution.
 */
long double bayesVulnerability(Hyper &hyper);

/**
 * \brief Prior g-vulnerability.
 *
 * The prior g-vulnerability is a function that measures how vulnerable a secret is.
 * This value corresponds to the expected gain of an adversary guessing the secret correctly,
 * given a set of actions that she/he can take.
 *
 * \param gain A gain function for a set of secrets.
 *
 * \return g-vulnerability of a prior distribution.
 */
long double gVulnerability(Gain &gain);

/**
 * \brief Posterior g-vulnerability.
 *
 * The posterior g-vulnerability is the expected gain of the adversary over the inner distributions.
 *
 * \param hyper A hyper-distribution.
 * \param gain A gain function for a set of secrets.
 *
 * \return g-vulnerability of a hyper-distribution.
 */
long double gVulnerability(Hyper &hyper, Gain &gain);

/**
 * \brief Prior k-tries.
 *
 * The prior k-tries is the probability of the adversary guess 
 * the value of the secret correctly in k tries, looking into a prior distribution.
 *
 * \param prior Prior distribution on the set of secrets.
 * \param k Number of tries the adversary has to guess the secret.
 *
 * \return A probability.
 */
long double kTries(Distribution &prior, int k);

/**
 * \brief Posterior k-tries.
 *
 * The posterior k-tries is the probability of an adversary guessing the secret correctly in
 * k tries, looking into a hyper-distribution.
 *
 * \param hyper A hyper-distribution.
 * \param k Number of tries the adversary has to guess the secret.
 *
 * \return A probability.
 */
long double kTries(Hyper &hyper, int k);

#endif
